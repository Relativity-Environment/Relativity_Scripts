
<# 10 PENTEST #>

#################### PRE INSTALL

if (Test-PendingReboot) { Invoke-Reboot }   
New-Item -ItemType Directory -Path "$env:LOCALAPPDATA\RELATIVITY" -ErrorAction SilentlyContinue
Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/MODULE/module.psm1" -Outfile "$env:LOCALAPPDATA\RELATIVITY\module.psm1" -ErrorAction SilentlyContinue
Write-Host "[+] MODULE IMPORTED" -ForegroundColor Green
Import-Module "$env:LOCALAPPDATA\RELATIVITY\module.psm1" 
Import-Module "$env:ChocolateyInstall\helpers\chocolateyInstaller.psm1" 


################## APPS INSTALL

## CINST

$global:ChocoInstalls = @(
        
        'ruby',
        'msys2-installer',
        'javaruntime',
        'activeperl',
        'nuget.commandline',
        'git',
        'gitextensions',
        'dotnet3.5',
        'python2',
        'python3',
        'golang',
        'openssl',
        'syspin',
        'winpcap', 
        'curl',
        'php',
        'phantomjs',
        'babun',
        'putty',
        'nano',
        'vim',
        'notepadplusplus'
        'superputty',
        'terminals',
        'toolsroot',
        'windirstat',
        'winscp',
        '7zip',
        '7zip.commandline',
        'autohotkey.portable',
        'adoptopenjdk11jre',
        'winrar'
        'tor-browser'
        'chromium',
        'wireshark',
        'netfoxdetective',
        'nmap',
        'zap',
        'mitmproxy',
        'burp-suite-free-edition',
        'microsoft-windows-terminal',
        'rsat',
        'sysinternals',
        'powershell-core',
        'nodejs',
        'tcptrace',
        'tcpview',
        'tcptunnel',
        'netcat',
        'tcping',
        'wget',
        'tor',
        'torchat',
        'visualstudio2019buildtools',
        'hashtools'

 )
Install-ChocoPackages
Stop-process -Name "HashTools" -ErrorAction SilentlyContinue

 $global:ManualDownloadInstall = @{


        'FOCA-v3.4.7.0.zip'                         = 'https://github.com/ElevenPaths/FOCA/releases/download/v3.4.7.0/FOCA-v3.4.7.0.zip'
        'EvilFoca.zip'					                    = 'https://github.com/ElevenPaths/EvilFOCA/releases/download/0.1.4.0/EvilFoca.zip'
        'john-1.8.0.13-jumbo-b7eae75d7-win64.zip'  	= 'https://download.openwall.net/pub/projects/john/contrib/windows/john-1.8.0.13-jumbo-b7eae75d7-win64.zip'
        'sqlmap-master.zip'					                = 'https://github.com/sqlmapproject/sqlmap/zipball/master'
        'SMTP_Diag_Tool.zip'					            	= 'https://www.adminkit.net/files/smtp_diag_tool/SMTP_Diag_Tool.zip'
        'thc-hydra.zip'								              = 'https://github.com/maaaaz/thc-hydra-windows/archive/master.zip'
        'nikto-master.zip'			                  	= 'https://github.com/sullo/nikto/archive/master.zip'
        'Vulnerator.zip'       					          	= 'https://github.com/Vulnerator/Vulnerator/releases/download/v6.1.9/Vulnerator_v6-1-9.zip'
        'NetworkMiner_2-5.zip'					          	= 'https://www.netresec.com/?download=NetworkMiner'
        'JavaRuleSetter.zip'	                    	= 'https://www.elevenpaths.com/downloads/JavaRuleSetter.zip'
        'demonsaw_win_64.zip'                       = 'https://www.demonsaw.com/download/demonsaw_win_64.zip'
        'gmtcheck.zip'				                      = 'https://www.elevenpaths.com/downloads/gmtcheck.zip'
        'Google_Index_Retriever.zip'	             	= 'https://www.elevenpaths.com/downloads/Google_Index_Retriever.zip'
        'rainbowcrack-1.7-win64.zip' 				        = 'https://project-rainbowcrack.com/rainbowcrack-1.7-win64.zip'
        'hashcat-6.0.0.7z'                          = 'https://hashcat.net/files/hashcat-6.0.0.7z'
        'SpiderFoot-2.11-w32.zip'               	  = 'https://netcologne.dl.sourceforge.net/project/spiderfoot/SpiderFoot-2.11-w32.zip'
        'ophcrack-3.8.0-bin.zip'                    = 'https://netix.dl.sourceforge.net/project/ophcrack/ophcrack/3.8.0/ophcrack-3.8.0-bin.zip'
        'proxytunnel-190-cygwin.zip'                = 'https://netix.dl.sourceforge.net/project/proxytunnel/proxytunnel%20binaries/proxytunnel%201.9.0%20%28windows%20binary%2Bcygwin%20libs%29/proxytunnel-190-cygwin.zip'
        'socat-1.7.3.2-1-i686.zip'                  = 'https://netcologne.dl.sourceforge.net/project/unix-utils/socat/1.7.3.2/socat-1.7.3.2-1-i686.zip'    
        'mimikatz_trunk.zip'                        = 'https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20200715/mimikatz_trunk.zip'
        'nirsoft_package.rar'                       = 'http://52.210.171.72/gravity/nirsoft_package.rar'
        'aquatone_windows_amd64_1.7.0.zip'          = 'https://github.com/michenriksen/aquatone/releases/download/v1.7.0/aquatone_windows_amd64_1.7.0.zip'
        'osslsigncode-1.7.1-1-x86_64.zip'           = 'https://netcologne.dl.sourceforge.net/project/unix-utils/osslsigncode/osslsigncode-1.7.1-1-x86_64.zip'
        'LOIC-1.0.8-binary.zip'                     = 'https://netcologne.dl.sourceforge.net/project/loic/loic/loic-1.0.8/LOIC-1.0.8-binary.zip'
        'PhoneInfoga_Windows_x86_64.tar.gz'         = 'https://github.com/sundowndev/PhoneInfoga/releases/download/v2.3.1/PhoneInfoga_Windows_x86_64.tar.gz' 
        'Xenotix_v_6.2.rar'                         = 'http://52.210.171.72/gravity/Xenotix_v_6.2.rar' 
        'PIT-Public_Intellegence_Tool_V2.5.1.rar'   = 'http://52.210.171.72/gravity/PIT-Public_Intellegence_Tool_V2.5.1.rar'
        'wapiti3-3.0.3.zip'                         = 'https://netcologne.dl.sourceforge.net/project/wapiti/wapiti/wapiti-3.0.3/wapiti3-3.0.3.zip'
        'pwdump8-8.2.zip'                           = 'https://download.openwall.net/pub/projects/john/contrib/pwdump/pwdump8-8.2.zip'
        #'DarkComet+V531.zip'                        = 'http://download938.mediafire.com/1u4cvtgygctg/qe2yef3n7rgf74c/DarkComet+V531.zip'
        'Safe3SI-8.9.rar'                           = 'https://netix.dl.sourceforge.net/project/safe3si/Safe3SI-8.9.rar'
        'themole-0.3-win32.zip'                     = 'https://netcologne.dl.sourceforge.net/project/themole/themole-0.3/themole-0.3-win32.zip'
        'Hash_Suite_Free_3_5_1.zip'                 = 'https://hashsuite.openwall.net/downloads/Hash_Suite_Free_3_5_1.zip'
        'exiftool-12.06.zip'                        = 'https://exiftool.org/exiftool-12.06.zip'
        <#----#>
        'Nessus-8.10.1-x64.msi'                     = 'http://52.210.171.72/gravity/Nessus-8.10.1-x64.msi'
        'metasploitframework-latest.msi' 			      = 'https://windows.metasploit.com/metasploitframework-latest.msi'
        
 }

## PE

    $global:PEAPPS = @{
  
       
       'ipscan-3.7.2-setup.exe'					          = 'https://github.com/angryip/ipscan/releases/download/3.7.2/ipscan-win64-3.7.2.exe'
       'arpspoof.exe' 							              = 'https://github.com/alandau/arpspoof/releases/download/v0.1/arpspoof.exe'
       'MicEnum.exe'					                  	= 'https://www.elevenpaths.com/downloads/MicEnum.exe'
       'crunch_win.exe'                           = 'https://github.com/shadwork/Windows-Crunch/releases/download/v1.1/crunch_win.exe'
       'HashIdentifier.exe'                       = 'https://netix.dl.sourceforge.net/project/hashidentifier/Hash%20Identifier.exe'
       'tcprelay.exe'                             = 'https://netix.dl.sourceforge.net/project/tcprelay-seb/tcprelay-1.0/tcprelay.exe'
       'jsql-injection-v0.82.jar'                 = 'https://github.com/ron190/jsql-injection/releases/download/v0.82/jsql-injection-v0.82.jar'


  }



## GIT

    $global:GitPackages = @{
  
      'RED_HAWK.git'                  = 'https://github.com/Tuhinshubhra/RED_HAWK.git'
      'CCrawlDNS.git'                 = 'https://github.com/lgandx/CCrawlDNS.git'
      'theHarvester.git'              = 'https://github.com/laramies/theHarvester.git'
      'sherlock.git'                  = 'https://github.com/sherlock-project/sherlock.git'
      'tacyt-maltego-transforms.git'  = 'https://github.com/ElevenPaths/tacyt-maltego-transforms.git'
      'uac-a-mola.git'                = 'https://github.com/ElevenPaths/uac-a-mola.git'
      'nishang.git'                   = 'https://github.com/samratashok/nishang.git'
      'PowerSploit.git'               = 'https://github.com/PowerShellMafia/PowerSploit.git'
      'UACME.git'                     = 'https://github.com/hfiref0x/UACME.git'
      'commix.git'                    = 'https://github.com/commixproject/commix.git'
      'wfuzz.git'                     = 'https://github.com/xmendez/wfuzz.git'
      'smbmap.git'                    = 'https://github.com/ShawnDEvans/smbmap.git'
      'WhatWeb.git'                   = 'https://github.com/urbanadventurer/WhatWeb.git'
      'patator-windows.git'           = 'https://github.com/maaaaz/patator-windows.git'
      'unicorn.git'                   = 'https://github.com/trustedsec/unicorn.git'
      'SysWhispers.git'               = 'https://github.com/trustedsec/SysWhispers.git'
      'quicksql.git'                  = 'https://github.com/trustedsec/quicksql.git'
      'dnschef.git'                   = 'https://github.com/iphelix/dnschef.git'
      'weevely3.git'                  = 'https://github.com/epinna/weevely3.git'
      'Responder-Windows.git'         = 'https://github.com/lgandx/Responder-Windows.git'
      'pack.git'                      = 'https://github.com/iphelix/pack.git'
      'cupp.git'                      = 'https://github.com/Mebus/cupp.git'
      'brutescrape.git'               = 'https://github.com/cheetz/brutescrape.git'
      'XSStrike.git'                  = 'https://github.com/s0md3v/XSStrike.git'
      'DAVOSET.git'                   = 'https://github.com/MustLive/DAVOSET.git'
      'mutiny-fuzzer.git'             = 'https://github.com/Cisco-Talos/mutiny-fuzzer.git'
      'radamsa.git'                   = 'https://gitlab.com/akihe/radamsa.git'
      'Asnlookup.git'                 = 'https://github.com/yassineaboukir/Asnlookup.git'
      'pwnedOrNot.git'                = 'https://github.com/thewhiteh4t/pwnedOrNot.git'
      'PhEmail.git'                   = 'https://github.com/Dionach/PhEmail.git'
      'NoSQLMap.git'                  = 'https://github.com/codingo/NoSQLMap.git'
      'whitewidow.git'                = 'https://github.com/WhitewidowScanner/whitewidow.git'
      'DSSS.git'                      = 'https://github.com/stamparm/DSSS.git'
      'CMSeeK.git'                    = 'https://github.com/Tuhinshubhra/CMSeeK.git'
      'UsoDllLoader.git'              = 'https://github.com/itm4n/UsoDllLoader.git'
      'droopescan.git'                = 'https://github.com/droope/droopescan.git'
      'wesng.git'                     = 'https://github.com/bitsadmin/wesng.git'
      'ldapdomaindump.git'            = 'https://github.com/dirkjanm/ldapdomaindump.git'
      'MS17-010.git'                  = 'https://github.com/worawit/MS17-010.git'
      'AutoBlue-MS17-010.git'         = 'https://github.com/3ndG4me/AutoBlue-MS17-010.git'
      'PrivExchange.git'              = 'https://github.com/dirkjanm/PrivExchange.git'
      'evil-winrm.git'                = 'https://github.com/Hackplayers/evil-winrm.git'
      'impacket.git'                  = 'https://github.com/SecureAuthCorp/impacket.git'
      'pth-toolkit.git'               = 'https://github.com/byt3bl33d3r/pth-toolkit.git'
      'joomscan.git'                  = 'https://github.com/rezasp/joomscan.git'
      'adaudit.git'                   = 'https://github.com/phillips321/adaudit.git'
      'PowerMemory.git'               = 'https://github.com/giMini/PowerMemory.git'
      'SessionGopher.git'             = 'https://github.com/Arvanaghi/SessionGopher.git'
      'p0wnedShell.git'               = 'https://github.com/Cn33liz/p0wnedShell.git'
      'CrackMapExecWin.git'           = 'https://github.com/maaaaz/CrackMapExecWin.git'
      'Ultimate-Facebook-Scraper.git' = 'https://github.com/harismuneer/Ultimate-Facebook-Scraper.git'
      'njRAT.git'                     = 'https://github.com/brian8544/njRAT.git'
      'swaks'                         = 'https://github.com/jetmore/swaks.git'
      'ipwn'                          = 'https://github.com/altjx/ipwn.git'


}

 ## AHK
 $global:AHKPackages = @{

  ## AHK install
    
   'MaltegoSetup.JRE64.v4.2.11.13104.exe' 		 = 'https://maltego-downloads.s3.us-east-2.amazonaws.com/windows/MaltegoSetup.JRE64.v4.2.11.13104.exe'
   'VegaSetup64.exe'     						        	 = 'https://support.subgraph.com/downloads/VegaSetup64.exe'
   'ncrack-0.7-setup.exe'                      = 'https://nmap.org/ncrack/dist/ncrack-0.7-setup.exe'
   'DirBuster-0.12-Setup.exe'                  = 'http://52.210.171.72/gravity/DirBuster-0.12-Setup.exe'
   'johnny_2.2_win.zip'                        = 'https://openwall.info/wiki/_media/john/johnny/johnny_2.2_win.zip'
   'TMACv6.0.7_Setup.zip'                      = 'https://download.technitium.com/tmac/TMACv6.0.7_Setup.zip'
   'SNMPScannerSetup.zip'                      = 'http://52.210.171.72/gravity/SNMPScannerSetup.zip'
   'w3af_1.0_stable_setup.exe'                 = 'http://52.210.171.72/gravity/w3af_1.0_stable_setup.exe' 
   'onionshare-2.2-setup.exe'                  = 'https://onionshare.org/dist/2.2/onionshare-2.2-setup.exe'
   'NStalker-WebSecurityScanner-FreeX-b34.exe' = 'http://52.210.171.72/gravity/NStalker-WebSecurityScanner-FreeX-b34.exe'
   'Havij_1.12_Free.exe'                       = 'http://52.210.171.72/gravity/Havij_1.12_Free.exe'
   'ettercap-NG-0.7.3-win32.exe'               = 'http://52.210.171.72/gravity/ettercap-NG-0.7.3-win32.exe'

   'install-dirbuster.ahk'   = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-dirbuster.ahk'
   'install-jonhy.ahk'       = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-jonhy.ahk'
   'install-maltego.ahk'     = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-maltego.ahk'
   'install-ncrack.ahk'      = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-ncrack.ahk'
   'install-snmp.ahk'        = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-snmp.ahk'
   'install-tmac.ahk'        = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-tmac.ahk'
   'install-vega.ahk'        = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-vega.ahk'
   'install-w3af.ahk'        = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-w3af.ahk'
   'install-onionshare.ahk'  = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-onionshare.ahk'
   'install-nstalker.ahk'    = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-nstalker.ahk'
   'install-havij.ahk'       = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-havij.ahk'
   'install-ettercap.ahk'    = 'https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/AHK/install-ettercap.ahk'

}
Get-AHKPackages


$scripts = @(

'install-w3af.ahk'
'install-dirbuster.ahk'
'install-jonhy.ahk'
'install-maltego.ahk'
'install-ncrack.ahk'
'install-snmp.ahk'
'install-vega.ahk'
'install-tmac.ahk'
'install-onionshare.ahk'
'install-nstalker.ahk'
'install-havij.ahk'
'install-ettercap.ahk'

)


$filesDir = "$env:systemdrive\cache\ahk"

ForEach ($name in $scripts) {
    
  $script = Join-Path $filesDir $name
  $content = get-content "$env:LOCALAPPDATA\RELATIVITY\pentest_ahk_install" -ErrorAction SilentlyContinue
  if(-not($content | select-string -pattern "$name")){
     
      Write-Host "[+] Executing $script" -ForegroundColor Green
      AutoHotKey $script
      Write-Output "$script" >> "$env:LOCALAPPDATA\RELATIVITY\pentest_ahk_install"
      Start-Sleep 5
  
  }else{}

}

######

Install-Apps;
Get-PE;
Get-GITPackages


if (Test-PendingReboot) { Invoke-Reboot }   


######## PIP TOOLS

$Pip3Install = @(


    'wfuzz'
    'colorama'
    'cython'
    'fierce'
    'requests[socks]'
    'requests'
    'stem'
    'instagram-py'
    'webtech'
    'explo'

)

$path ="pip_installs"
if(-not(Test-Path "$env:RELATOOLS\$path")){ New-Item -ItemType Directory -Path $env:RELATOOLS -Name $path}

Foreach ($pip3 in $Pip3Install) {

   
  if (-not (Test-Path "$env:RELATOOLS\$path\$pip3")){
               
    try {
            
            Write-Host "[+] Install $pip3" -ForegroundColor Cyan
            pip install $pip3
            New-Item -ItemType Directory -Path $env:RELATOOLS -Name "$path\$pip3" -ErrorAction SilentlyContinue
        
        }
        
        catch {
           
          Write-Error "[!] Unable to download pip package: $pip3"
    
          }      
      }

      else {
                
            Write-Information "[-] There were no pip to download: $pip3"
     
      }

}


$Pip2Install = @(

    'wheel'
    'intall pyDNS'
    'beautifulsoup4'
    'couchdb'
    'pcalc'
    'six'
    'requests'
    'pbkdf2'
    'pymongo'
    'termcolor'

)

Confirm-Installed "py -2 -m pip install --upgrade pip"

Foreach ($pip2 in $Pip2Install) {

  $path ="pip_installs"
   
  if (-not (Test-Path "$env:RELATOOLS\$path\$pip2")){
               
    try {
            
            Write-Host "[+] Install $pip2" -ForegroundColor Cyan
            pip2 install $pip2 
            New-Item -ItemType Directory -Path $env:RELATOOLS -Name "$path\$pip2" -ErrorAction SilentlyContinue
        
        }
        
        catch {
           
            Write-Error "[!] Unable to download pip package: $pip2"

          }      
      }

      else {
                
            Write-Information "[-] There were no pip to download: $pip2"

      }

}


## perl requeriments
Set-Location "$env:RELATOOLS\DAVOSET"
cpan IO::Socket::Socks

## npm tools
npm install --global -s padding-oracle-attacker
npm install --global -s dirw4lker
npm install --global -s blackorphan
npm install --global -s hackery
npm install --global -s hack-fu


#### Pin Items to Taskbar ####

Write-Host "[-] Pinning items to Taskbar" -ForegroundColor Green
# Explorer
$target_file = Join-Path ${Env:WinDir} "explorer.exe"
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$target_file" 5386
} catch {}
# CMD prompt
$target_file = Join-Path ${Env:WinDir} "system32\cmd.exe"
$target_dir = ${Env:UserProfile}
$target_args = '/K "cd ' + ${Env:UserProfile} + '"'
$shortcut = Join-Path ${Env:UserProfile} "temp\cmd.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -Arguments $target_args -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
#windows terminal
$target_file = "$env:LOCALAPPDATA\RELATIVITY\TWEAKS\Windows Terminal.lnk"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\WindowsTerminal.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# Babun
$target_file = Join-Path (Join-Path ${Env:USERPROFILE} ".babun\cygwin\bin\") "mintty.exe"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\mintty.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# PITT
$target_file = "$env:RELATOOLS\PIT-Public_Intellegence_Tool_V2.5.1\PITT - Public Intellegence Tool V2.5.1\Public Intellegence Tool Portable.exe"
$target_dir = ${Env:UserProfile}
$target_args = '-NoExit -Command "cd ' + "${Env:UserProfile}" + '"'
$shortcut = Join-Path ${Env:UserProfile} "temp\Public Intellegence Tool Portable.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -Arguments $target_args -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# Chromium
$target_file = "${env:ProgramFiles(x86)}\Chromium\Application\chrome.exe"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\chrome.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# Tor-Browser
$target_file = "$env:ChocolateyInstall\lib\tor-browser\tools\tor-browser\Browser\firefox.exe"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\tor-browser.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# Notepad++
$target_file = "$env:ProgramFiles\Notepad++\notepad++.exe"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\notepad++.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}
# Vim
$target_file = "$env:systemdrive\tools\vim\vim82\vim.exe"
$target_dir = ${Env:UserProfile}
$shortcut = Join-Path ${Env:UserProfile} "temp\vim.lnk"
Install-ChocolateyShortcut -shortcutFilePath $shortcut -targetPath $target_file -WorkingDirectory $target_dir -PinToTaskbar -RunasAdmin
try {
  Write-Host "`tPinning $target_file to taskbar" -ForegroundColor Green
  syspin.exe "$shortcut" 5386
} catch {}



## WordList path
$wordLists = "$env:RELATOOLS\WordLists"
if(-not(Test-Path $wordLists)){New-Item -ItemType Directory -Path $wordLists}

## Add Env Paths
Add-EnvPath -Location 'User' -NewPath "$env:systemdrive\metasploit-framework\bin"

## Icon babun
New-PSDrive -PSProvider Registry -Name HKCR -Root  HKEY_CLASSES_ROOT -ErrorAction SilentlyContinue
Set-ItemProperty -Path 'HKCR:\Directory\Background\shell\babun' -Name "Icon" -Value "%userprofile%\.babun\cygwin\bin\mintty.exe" -ErrorAction SilentlyContinue


## Add Windows Terminal context menu

if(-not(Test-Path "$env:LOCALAPPDATA\RELATIVITY\wt" )){

  wt.exe
  pwsh.exe -command {Set-ExecutionPolicy Bypass -Scope Process -Force; `
  [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072;`
  Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/lextm/windowsterminal-shell/master/install.ps1'))}
  
  New-Item -ItemType File -Path "$env:LOCALAPPDATA\RELATIVITY" -Name "wt"

}

Invoke-WebRequest -UseBasicParsing -Uri "https://raw.githubusercontent.com/Relativity-Environment/Relativity_Scripts/master/PENTEST.TOOLS/FILES/ZIP/LayoutModification.xml" -Outfile "$env:LOCALAPPDATA\RELATIVITY\LayoutModification.xml"
Copy-Item -Path "$env:LOCALAPPDATA\RELATIVITY\LayoutModification.xml" -Destination "$env:LOCALAPPDATA\Microsoft\Windows\Shell\"
Remove-Item -Force -Recurse -Path "HKCU:\SOFTWARE\Microsoft\Windows\CurrentVersion\CloudStore\Store"



############### POST ISNTALL
Add-Background;
Clear-Desktop;
Add-PentestMenu;
Remove-DesktioIni

## REMOVE CACHE FOLDER
Remove-Item -Path "$env:SystemDrive\cache" -Recurse -Force
Remove-Item -Path "$env:LOCALAPPDATA\temp\chocolatey" -Recurse -Force

Write-Host "[+] Instalacion de herramientas de pentesting" -ForegroundColor Green
if (Test-PendingReboot) { Invoke-Reboot }   

